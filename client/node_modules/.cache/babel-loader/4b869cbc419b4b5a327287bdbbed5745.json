{"ast":null,"code":"var _jsxFileName = \"E:\\\\Studying\\\\crypto_social\\\\client\\\\src\\\\components\\\\CreatePost\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar fk = null;\n\nconst CreatePost = () => {\n  _s();\n\n  const account = useSelector(state => state.account);\n  const [content, setContent] = useState('');\n  const [image, setImage] = useState([]);\n\n  const handleUpPost = async () => {\n    // const formData = new FormData()\n    // image.forEach(file => {\n    //     formData.append('images', file)\n    // })\n    // formData.append('content', content)\n    // formData.append('username', account.username)\n    // formData.append('displayname', account.displayname)\n    // const rs = await axios.post('/posts/create', formData,{headers: {'Content-Type': 'multipart/form-data'}})\n    console.log(fk);\n    const rs = await axios.post('/posts/create', {\n      fk\n    });\n\n    if (rs.data.success) {\n      alert(rs.data.message);\n      setContent('');\n      setImage([]);\n    } else {\n      alert(rs.data.message);\n    }\n  };\n\n  const handleUpImage = e => {\n    const listFile = e.target.files;\n    const file = e.target.files[0];\n    console;\n    fk = new Blob(file, {\n      type: 'image/jpeg'\n    });\n    const listImage = [];\n\n    for (let i = 0; i < listFile.length; i++) {\n      listImage.push(listFile[i]);\n    }\n\n    setImage(listImage);\n    e.target.value = null;\n  };\n\n  const listImages = image.map((item, index) => {\n    const handleDelete = index => {\n      const listImage = [...image];\n      listImage.splice(index, 1);\n      setImage(listImage);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => handleDelete(index),\n      height: \"150px\",\n      width: \"150px\",\n      src: URL.createObjectURL(item),\n      alt: \"\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" row mb-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" col-xxl-6 m-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" card  shadow-sm p-3 border border-primary rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: e => setContent(e.target.value),\n              value: content,\n              className: \" form-control\",\n              placeholder: \"B\\u1EA1n \\u0111ang ngh\\u0129 g\\xEC?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" mb-3\",\n            children: image && listImages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \"image/jpeg,image/png,image/webp,image/gif\",\n            multiple: true,\n            type: \"file\",\n            className: \" form-control-file\",\n            onChange: e => handleUpImage(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpPost,\n            className: \"btn btn-primary float-end\",\n            children: \"\\u0110\\u0103ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"DVOGZgn6+L668H5yt/T3Z6ZECUE=\", false, function () {\n  return [useSelector];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["E:/Studying/crypto_social/client/src/components/CreatePost/index.js"],"names":["React","useState","useSelector","axios","fk","CreatePost","account","state","content","setContent","image","setImage","handleUpPost","console","log","rs","post","data","success","alert","message","handleUpImage","e","listFile","target","files","file","Blob","type","listImage","i","length","push","value","listImages","map","item","index","handleDelete","splice","URL","createObjectURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,EAAE,GAAG,IAAT;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,YAAY,GAAG,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ;AACA,UAAMW,EAAE,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,eAAX,EAA4B;AAAEZ,MAAAA;AAAF,KAA5B,CAAjB;;AACA,QAAIW,EAAE,CAACE,IAAH,CAAQC,OAAZ,EAAqB;AACjBC,MAAAA,KAAK,CAACJ,EAAE,CAACE,IAAH,CAAQG,OAAT,CAAL;AACAX,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAJD,MAIO;AACHQ,MAAAA,KAAK,CAACJ,EAAE,CAACE,IAAH,CAAQG,OAAT,CAAL;AACH;AACJ,GAlBD;;AAoBA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACA,UAAMC,IAAI,GAAGJ,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACAZ,IAAAA,OAAO;AACPT,IAAAA,EAAE,GAAG,IAAIuB,IAAJ,CAASD,IAAT,EAAe;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAf,CAAL;AACA,UAAMC,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACQ,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,MAAAA,SAAS,CAACG,IAAV,CAAeT,QAAQ,CAACO,CAAD,CAAvB;AACH;;AACDnB,IAAAA,QAAQ,CAACkB,SAAD,CAAR;AACAP,IAAAA,CAAC,CAACE,MAAF,CAASS,KAAT,GAAiB,IAAjB;AACH,GAXD;;AAaA,QAAMC,UAAU,GAAGxB,KAAK,CAACyB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1C,UAAMC,YAAY,GAAID,KAAD,IAAW;AAC5B,YAAMR,SAAS,GAAG,CAAC,GAAGnB,KAAJ,CAAlB;AACAmB,MAAAA,SAAS,CAACU,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACA1B,MAAAA,QAAQ,CAACkB,SAAD,CAAR;AACH,KAJD;;AAKA,wBACI;AAAK,MAAA,OAAO,EAAE,MAAMS,YAAY,CAACD,KAAD,CAAhC;AAAyC,MAAA,MAAM,EAAC,OAAhD;AAAwD,MAAA,KAAK,EAAC,OAA9D;AAAsE,MAAA,GAAG,EAAEG,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAA3E;AAAsG,MAAA,GAAG,EAAC;AAA1G,OAAkHC,KAAlH;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GATkB,CAAnB;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,oDAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACI;AAAU,cAAA,QAAQ,EAAEf,CAAC,IAAIb,UAAU,CAACa,CAAC,CAACE,MAAF,CAASS,KAAV,CAAnC;AAAqD,cAAA,KAAK,EAAEzB,OAA5D;AAAqE,cAAA,SAAS,EAAC,eAA/E;AAA+F,cAAA,WAAW,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBACKE,KAAK,IAAIwB;AADd;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAO,YAAA,MAAM,EAAC,2CAAd;AAA0D,YAAA,QAAQ,MAAlE;AAAmE,YAAA,IAAI,EAAC,MAAxE;AAA+E,YAAA,SAAS,EAAC,oBAAzF;AAA8G,YAAA,QAAQ,EAAGZ,CAAD,IAAOD,aAAa,CAACC,CAAD;AAA5I;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAQ,YAAA,OAAO,EAAEV,YAAjB;AAA+B,YAAA,SAAS,EAAC,2BAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnED;;GAAMP,U;UACcH,W;;;KADdG,U;AAqEN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport axios from \"axios\"\r\n\r\nvar fk = null\r\n\r\nconst CreatePost = () => {\r\n    const account = useSelector(state => state.account)\r\n    const [content, setContent] = useState('')\r\n    const [image, setImage] = useState([])\r\n\r\n    const handleUpPost = async () => {\r\n        // const formData = new FormData()\r\n        // image.forEach(file => {\r\n        //     formData.append('images', file)\r\n        // })\r\n        // formData.append('content', content)\r\n        // formData.append('username', account.username)\r\n        // formData.append('displayname', account.displayname)\r\n        // const rs = await axios.post('/posts/create', formData,{headers: {'Content-Type': 'multipart/form-data'}})\r\n        console.log(fk)\r\n        const rs = await axios.post('/posts/create', { fk })\r\n        if (rs.data.success) {\r\n            alert(rs.data.message)\r\n            setContent('')\r\n            setImage([])\r\n        } else {\r\n            alert(rs.data.message)\r\n        }\r\n    }\r\n\r\n    const handleUpImage = (e) => {\r\n        const listFile = e.target.files\r\n        const file = e.target.files[0]\r\n        console\r\n        fk = new Blob(file, { type: 'image/jpeg' })\r\n        const listImage = []\r\n        for (let i = 0; i < listFile.length; i++) {\r\n            listImage.push(listFile[i])\r\n        }\r\n        setImage(listImage)\r\n        e.target.value = null\r\n    }\r\n\r\n    const listImages = image.map((item, index) => {\r\n        const handleDelete = (index) => {\r\n            const listImage = [...image]\r\n            listImage.splice(index, 1)\r\n            setImage(listImage)\r\n        }\r\n        return (\r\n            <img onClick={() => handleDelete(index)} height=\"150px\" width=\"150px\" src={URL.createObjectURL(item)} alt=\"\" key={index} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\" row mb-5\">\r\n            <div className=\" col-xxl-6 m-auto\">\r\n                <div className=\" card  shadow-sm p-3 border border-primary rounded\">\r\n                    <div className=\" card-body\">\r\n                        <div className=\" mb-3\">\r\n                            <textarea onChange={e => setContent(e.target.value)} value={content} className=\" form-control\" placeholder=\"Bạn đang nghĩ gì?\"></textarea>\r\n                        </div>\r\n                        <div className=\" mb-3\">\r\n                            {image && listImages}\r\n                        </div>\r\n                        <input accept=\"image/jpeg,image/png,image/webp,image/gif\" multiple type=\"file\" className=\" form-control-file\" onChange={(e) => handleUpImage(e)} />\r\n                        <button onClick={handleUpPost} className=\"btn btn-primary float-end\">Đăng</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost"]},"metadata":{},"sourceType":"module"}