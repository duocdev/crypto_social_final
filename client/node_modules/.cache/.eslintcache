[{"E:\\Studying\\crypto_social\\client\\src\\index.js":"1","E:\\Studying\\crypto_social\\client\\src\\reportWebVitals.js":"2","E:\\Studying\\crypto_social\\client\\src\\App.js":"3","E:\\Studying\\crypto_social\\client\\src\\views\\LoginPage\\index.js":"4","E:\\Studying\\crypto_social\\client\\src\\views\\HomePage\\index.js":"5","E:\\Studying\\crypto_social\\client\\src\\views\\RegisterPage\\index.js":"6","E:\\Studying\\crypto_social\\client\\src\\views\\ProfilePage\\index.js":"7","E:\\Studying\\crypto_social\\client\\src\\views\\PostPage\\index.js":"8","E:\\Studying\\crypto_social\\client\\src\\views\\SettingPage\\index.js":"9","E:\\Studying\\crypto_social\\client\\src\\views\\SearchPage\\index.js":"10","E:\\Studying\\crypto_social\\client\\src\\store\\store.js":"11","E:\\Studying\\crypto_social\\client\\src\\store\\reducers\\index.js":"12","E:\\Studying\\crypto_social\\client\\src\\store\\reducers\\accountReducer.js":"13"},{"size":697,"mtime":1638174399373,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1637525639214,"results":"16","hashOfConfig":"15"},{"size":3339,"mtime":1638180755479,"results":"17","hashOfConfig":"15"},{"size":3058,"mtime":1638101110885,"results":"18","hashOfConfig":"15"},{"size":5752,"mtime":1638172709320,"results":"19","hashOfConfig":"15"},{"size":3778,"mtime":1638171774028,"results":"20","hashOfConfig":"15"},{"size":8497,"mtime":1638180441286,"results":"21","hashOfConfig":"15"},{"size":5630,"mtime":1638179304848,"results":"22","hashOfConfig":"15"},{"size":5381,"mtime":1638171707615,"results":"23","hashOfConfig":"15"},{"size":9039,"mtime":1638178303631,"results":"24","hashOfConfig":"15"},{"size":143,"mtime":1637621203505,"results":"25","hashOfConfig":"15"},{"size":194,"mtime":1638100398058,"results":"26","hashOfConfig":"15"},{"size":686,"mtime":1638140826198,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h2j91t",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\Studying\\crypto_social\\client\\src\\index.js",[],"E:\\Studying\\crypto_social\\client\\src\\reportWebVitals.js",[],["58","59"],"E:\\Studying\\crypto_social\\client\\src\\App.js",[],"E:\\Studying\\crypto_social\\client\\src\\views\\LoginPage\\index.js",[],"E:\\Studying\\crypto_social\\client\\src\\views\\HomePage\\index.js",["60"],"import React, { useEffect, useState } from \"react\"\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nconst HomePage = () => {\r\n    const navigate = useNavigate()\r\n    const account = useSelector(state => state.account)\r\n    const fetchPosts = async () => {\r\n        const rs = await axios.post('/posts/list', { username: account.username })\r\n        setPosts(rs.data.posts)\r\n    }\r\n    //-----------------------------Create-Post--------------------------------\r\n    const [error_create_post, setError_create_post] = useState({ error: false, message: '' })\r\n    const [content, setContent] = useState('')\r\n    const [tags, setTags] = useState('')\r\n    const hanldeCreatePost = async () => {\r\n        if (!content) {\r\n            setError_create_post({ error: true, message: 'Vui lòng nhập nội dung' })\r\n        } else {\r\n            const tgs = tags.trim().split('#')\r\n            tgs.splice(0, 1)\r\n            const rs = await axios.post('/posts/create', {\r\n                content,\r\n                tags: tgs,\r\n                username: account.username,\r\n                displayname: account.displayname\r\n            })\r\n            if (rs.data.success) {\r\n                setContent('')\r\n                setTags('')\r\n                setError_create_post({ error: true, message: rs.data.message })\r\n                fetchPosts()\r\n            } else {\r\n                setError_create_post({ error: true, message: rs.data.message })\r\n            }\r\n        }\r\n    }\r\n    //-----------------------------List-Posts----------------------------------------------------\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchPosts()\r\n    }, [])\r\n\r\n\r\n    const renderPosts = posts.map((post) => {\r\n        const handleClick = () => {\r\n            navigate('/posts/', { state: { post } })\r\n        }\r\n        const handleLike = async () => {\r\n            const rs = await axios.post('/posts/like', { post_id: post._id, username: account.username })\r\n            if (rs.data.success) {\r\n                fetchPosts()\r\n            } else {\r\n                console.log(rs.data.message)\r\n            }\r\n        }\r\n        const handleUnLike = async () => {\r\n            const rs = await axios.post('/posts/unlike', { post_id: post._id, username: account.username })\r\n            if (rs.data.success) {\r\n                fetchPosts()\r\n            } else {\r\n                console.log(rs.data.message)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\" row mb-1\" key={post._id}>\r\n                <div className=\" col-xxl-6 m-auto\">\r\n                    <div className=\" card shadow-sm p-3 border border-primary rounded\">\r\n                        <div className=\" card-body\">\r\n                            <div className=\" mb-3\">\r\n                                <div className=\" h6\">{post.by.displayname}</div>\r\n                                <div className=\" text-muted\">@{post.by.username}</div>\r\n                                <div className=\" text-muted\">{new Date(post.created_at).toLocaleString()}</div>\r\n                            </div>\r\n                            <div onClick={handleClick} className=\" mb-3\">\r\n                                <div>{post.content}</div>\r\n                            </div>\r\n                            <hr className=\" py-0\" />\r\n                            <div className=\" mb-3\">{post.likes.length} thích - {post.comments.length} bình luận\r\n                            </div>\r\n                            <div className=\" mb-3\">\r\n                                {post.tags.map((tag, index) => { return <span key={index} className=\"badge bg-primary me-1\">#{tag}</span> })}\r\n                            </div>\r\n                            {\r\n                                post.likes.includes(account.username) ? <button onClick={handleUnLike} className=\" btn btn-primary me-1\">Thích</button>\r\n                                    : <button onClick={handleLike} className=\" btn btn-outline-primary me-1\">Thích</button>\r\n                            }\r\n                            <button onClick={handleClick} className=\" btn btn-outline-primary\">Bình luận</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    if (account.username == null) return <Navigate to='/login' />\r\n    return (\r\n        <>\r\n            <div className=\" row mb-5\">\r\n                <div className=\" col-xxl-6 m-auto\">\r\n                    <div className=\" card  shadow-sm p-3 border border-primary rounded\">\r\n                        <div className=\" card-body\">\r\n                            {error_create_post.error &&\r\n                                <div className=\" mb-3\">\r\n                                    <div className=\" alert alert-danger\">{error_create_post.message}</div>\r\n                                </div>\r\n                            }\r\n                            <div className=\" mb-3\">\r\n                                <textarea onChange={e => { setContent(e.target.value); setError_create_post({ error: false }) }} value={content} className=\" form-control\" placeholder=\"Bạn đang nghĩ gì?\"></textarea>\r\n                            </div>\r\n                            <input onChange={(e) => setTags(e.target.value)} value={tags} type=\"text\" placeholder=\"tag ví dụ #crypto #btc\" />\r\n                            <button onClick={hanldeCreatePost} className=\"btn btn-primary float-end\">Đăng bài</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {renderPosts}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage","E:\\Studying\\crypto_social\\client\\src\\views\\RegisterPage\\index.js",[],"E:\\Studying\\crypto_social\\client\\src\\views\\ProfilePage\\index.js",["61"],"import axios from \"axios\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useParams, Navigate, useNavigate } from 'react-router-dom'\r\n\r\n\r\n\r\nconst ProfilePage = () => {\r\n    const account = useSelector(state => state.account)\r\n    const navigate = useNavigate()\r\n    const params = useParams()\r\n    const username = params.username\r\n    const [profile, setProfile] = useState(null)\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const fetchData = async () => {\r\n        const result = await axios.post('/accounts/profile', { username })\r\n        setProfile(result.data.profile)\r\n        setPosts(result.data.posts)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleFollow = async () => {\r\n        const result = await axios.post('/accounts/follow', { username: account.username, follow: username })\r\n        if (result.data.success) {\r\n            fetchData()\r\n        } else {\r\n            console.log(result.data.message)\r\n        }\r\n    }\r\n    const handleUnFollow = async () => {\r\n        const result = await axios.post('/accounts/unfollow', { username: account.username, follow: username })\r\n        if (result.data.success) {\r\n            fetchData()\r\n        } else {\r\n            console.log(result.data.message)\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------------\r\n    const [error_create_post, setError_create_post] = useState({ error: false, message: '' })\r\n    const [content, setContent] = useState('')\r\n    const [tags, setTags] = useState('')\r\n    const hanldeCreatePost = async () => {\r\n        if (!content) {\r\n            setError_create_post({ error: true, message: 'Vui lòng nhập nội dung' })\r\n        } else {\r\n            const tgs = tags.trim().split('#')\r\n            tgs.splice(0, 1)\r\n            const rs = await axios.post('/posts/create', {\r\n                content,\r\n                tags: tgs,\r\n                username: account.username,\r\n                displayname: account.displayname\r\n            })\r\n            if (rs.data.success) {\r\n                setContent('')\r\n                setTags('')\r\n                setError_create_post({ error: true, message: rs.data.message })\r\n                fetchData()\r\n            } else {\r\n                setError_create_post({ error: true, message: rs.data.message })\r\n            }\r\n        }\r\n    }\r\n\r\n    //-----------------------------------------------------\r\n\r\n    const renderButtonFollow = () => {\r\n        if (account.username !== username) {\r\n            if (profile.followers !== null)\r\n                if (profile.followers.includes(account.username)) {\r\n                    return (\r\n                        <button onClick={handleUnFollow} className=\" btn btn-primary float-end\">Following</button>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <button onClick={handleFollow} className=\" btn btn-outline-primary float-end\">Follow</button>\r\n                    )\r\n                }\r\n        }\r\n    }\r\n\r\n    const renderCreatePost = () => {\r\n        if (account.username === username) {\r\n            return (\r\n                <div className=\" row mb-5\">\r\n                    <div className=\" col-xxl-6 m-auto\">\r\n                        <div className=\" card  shadow-sm p-3 border border-primary rounded\">\r\n                            <div className=\" card-body\">\r\n                                {error_create_post.error &&\r\n                                    <div className=\" mb-3\">\r\n                                        <div className=\" alert alert-danger\">{error_create_post.message}</div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\" mb-3\">\r\n                                    <textarea onChange={e => { setContent(e.target.value); setError_create_post({ error: false }) }} value={content} className=\" form-control\" placeholder=\"Bạn đang nghĩ gì?\"></textarea>\r\n                                </div>\r\n                                <input onChange={(e) => setTags(e.target.value)} value={tags} type=\"text\" placeholder=\"tag ví dụ #crypto #btc\" />\r\n                                <button onClick={hanldeCreatePost} className=\"btn btn-primary float-end\">Đăng bài</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n        const renderPosts = posts.map((post) => {\r\n            const handleClick = () => {\r\n                navigate('/posts/', { state: { post } })\r\n            }\r\n            const handleLike = async () => {\r\n                const rs = await axios.post('/posts/like', { post_id: post._id, username: account.username })\r\n                if (rs.data.success) {\r\n                    fetchData()\r\n                } else {\r\n                    console.log(rs.data.message)\r\n                }\r\n            }\r\n            const handleUnLike = async () => {\r\n                const rs = await axios.post('/posts/unlike', { post_id: post._id, username: account.username })\r\n                if (rs.data.success) {\r\n                    fetchData()\r\n                } else {\r\n                    console.log(rs.data.message)\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className=\" row mb-3\" key={post._id}>\r\n                    <div className=\" col-xxl-6 m-auto\">\r\n                        <div className=\" card shadow-sm p-3 border border-primary rounded\">\r\n                            <div className=\" card-body\">\r\n                                <div className=\" mb-3\">\r\n                                    <div className=\" h6\">{post.by.displayname}</div>\r\n                                    <div className=\" text-muted\">@{post.by.username}</div>\r\n                                    <div className=\" text-muted\">{new Date(post.created_at).toLocaleString()}</div>\r\n                                </div>\r\n                                <div onClick={handleClick} className=\" mb-3\">\r\n                                    <div>{post.content}</div>\r\n                                </div>\r\n                                <hr className=\" py-0\" />\r\n                                <div className=\" mb-3 text-muted\">{post.likes.length} thích - {post.comments.length} bình luận\r\n                                </div>\r\n                                <div className=\" mb-3\">\r\n                                    {post.tags.map((tag, index) => { return <span key={index} className=\"badge bg-primary me-1\">#{tag}</span> })}\r\n                                </div>\r\n                                {\r\n                                    post.likes.includes(account.username) ? <button onClick={handleUnLike} className=\" btn btn-primary me-1\">Thích</button>\r\n                                        : <button onClick={handleLike} className=\" btn btn-outline-primary me-1\">Thích</button>\r\n                                }\r\n                                <button onClick={handleClick} className=\" btn btn-outline-primary\">Bình luận</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n\r\n\r\n        if (account.username === null) return <Navigate to='/login' />\r\n        return (\r\n            <>\r\n                <div className=\" row mb-3\">\r\n                    <div className=\" col-xxl-6 m-auto\">\r\n                        <div className=\" card shadow-sm p-3 border border-primary\">\r\n                            {profile !== null &&\r\n                                <div className=\" card-body\">\r\n                                    <div className=\" h6\">{profile.displayname}</div>\r\n                                    <div className=\" text-muted\">@{profile.username}</div>\r\n                                    <div className=\" mb-3\">{profile.bio}</div>\r\n                                    <div className=\" mb-3 text-muted\">{profile.following.length} following - {profile.followers.length} followers</div>\r\n                                    {renderButtonFollow()}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {renderCreatePost()}\r\n                {renderPosts}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    export default ProfilePage","E:\\Studying\\crypto_social\\client\\src\\views\\PostPage\\index.js",[],"E:\\Studying\\crypto_social\\client\\src\\views\\SettingPage\\index.js",[],"E:\\Studying\\crypto_social\\client\\src\\views\\SearchPage\\index.js",["62"],"import React, { useState, useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Navigate, useParams, Link, useNavigate } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nconst SearchPage = () => {\r\n    const account = useSelector(state => state.account)\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    const keyword = params.keyword\r\n    const [search, setSearch] = useState(keyword)\r\n    const [people, setPeople] = useState([])\r\n    const [posts_tag, setPosts_tag] = useState([])\r\n    const [posts_content, setPosts_content] = useState([])\r\n\r\n    const fetchData = async () => {\r\n        const result = await axios.post('/search', { keyword:search })\r\n        console.log(result.data)\r\n        setPeople(result.data.accounts)\r\n        setPosts_tag(result.data.posts_tag)\r\n        setPosts_content(result.data.post_content)\r\n    }\r\n\r\n    useEffect(() => { fetchData() }, [])\r\n\r\n\r\n    const handleSearch = () => {\r\n        console.log(search)\r\n        fetchData()\r\n    }\r\n\r\n    const renderPosts_tag = posts_tag.map((post) => {\r\n        const handleClick = () => {\r\n            navigate('/posts/', { state: { post } })\r\n        }\r\n        const handleLike = async () => {\r\n            const rs = await axios.post('/posts/like', { post_id: post._id, username: account.username })\r\n            if (rs.data.success) {\r\n                fetchData()\r\n            } else {\r\n                console.log(rs.data.message)\r\n            }\r\n        }\r\n        const handleUnLike = async () => {\r\n            const rs = await axios.post('/posts/unlike', { post_id: post._id, username: account.username })\r\n            if (rs.data.success) {\r\n                fetchData()\r\n            } else {\r\n                console.log(rs.data.message)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\" row mb-3\" key={post._id}>\r\n                <div className=\" col-xxl-6 m-auto\">\r\n                    <div className=\" card shadow-sm p-3 border border-primary rounded\">\r\n                        <div className=\" card-body\">\r\n                            <div className=\" mb-3\">\r\n                                <div className=\" h6\">{post.by.displayname}</div>\r\n                                <div className=\" text-muted\">@{post.by.username}</div>\r\n                                <div className=\" text-muted\">{new Date(post.created_at).toLocaleString()}</div>\r\n                            </div>\r\n                            <div onClick={handleClick} className=\" mb-3\">\r\n                                <div>{post.content}</div>\r\n                            </div>\r\n                            <hr className=\" py-0\" />\r\n                            <div className=\" mb-3 text-muted\">{post.likes.length} thích - {post.comments.length} bình luận\r\n                            </div>\r\n                            <div className=\" mb-3\">\r\n                                {post.tags.map((tag, index) => { return <span key={index} className=\"badge bg-primary me-1\">#{tag}</span> })}\r\n                            </div>\r\n                            {\r\n                                post.likes.includes(account.username) ? <button onClick={handleUnLike} className=\" btn btn-primary me-1\">Thích</button>\r\n                                    : <button onClick={handleLike} className=\" btn btn-outline-primary me-1\">Thích</button>\r\n                            }\r\n                            <button onClick={handleClick} className=\" btn btn-outline-primary\">Bình luận</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const renderPosts_content = posts_content.map((post) => {\r\n        const handleClick = () => {\r\n            navigate('/posts/', { state: { post } })\r\n        }\r\n        const handleLike = async () => {\r\n            const rs = await axios.post('/posts/like', { post_id: post._id, username: account.username })\r\n            if (rs.data.success) {\r\n                fetchData()\r\n            } else {\r\n                console.log(rs.data.message)\r\n            }\r\n        }\r\n        const handleUnLike = async () => {\r\n            const rs = await axios.post('/posts/unlike', { post_id: post._id, username: account.username })\r\n            if (rs.data.success) {\r\n                fetchData()\r\n            } else {\r\n                console.log(rs.data.message)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\" row mb-3\" key={post._id}>\r\n                <div className=\" col-xxl-6 m-auto\">\r\n                    <div className=\" card shadow-sm p-3 border border-primary rounded\">\r\n                        <div className=\" card-body\">\r\n                            <div className=\" mb-3\">\r\n                                <div className=\" h6\">{post.by.displayname}</div>\r\n                                <div className=\" text-muted\">@{post.by.username}</div>\r\n                                <div className=\" text-muted\">{new Date(post.created_at).toLocaleString()}</div>\r\n                            </div>\r\n                            <div onClick={handleClick} className=\" mb-3\">\r\n                                <div>{post.content}</div>\r\n                            </div>\r\n                            <hr className=\" py-0\" />\r\n                            <div className=\" mb-3 text-muted\">{post.likes.length} thích - {post.comments.length} bình luận\r\n                            </div>\r\n                            <div className=\" mb-3\">\r\n                                {post.tags.map((tag, index) => { return <span key={index} className=\"badge bg-primary me-1\">#{tag}</span> })}\r\n                            </div>\r\n                            {\r\n                                post.likes.includes(account.username) ? <button onClick={handleUnLike} className=\" btn btn-primary me-1\">Thích</button>\r\n                                    : <button onClick={handleLike} className=\" btn btn-outline-primary me-1\">Thích</button>\r\n                            }\r\n                            <button onClick={handleClick} className=\" btn btn-outline-primary\">Bình luận</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    if (account.username === null) return <Navigate to=\"/login\" />\r\n    return (\r\n        <>\r\n            <div className=\" row\">\r\n                <div className=\" col-xxl-6 m-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\" input-group\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Search\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                                <button className=\"btn btn-primary\" onClick={handleSearch}>Search</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\" row\">\r\n                <div className=\" col-xxl-6 m-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header bg-white fw-bold text-uppercase text-primary\">mọi người</div>\r\n                        <div className=\"card-body\">\r\n                            <ul className=\"list-group\">\r\n                                {\r\n                                    people.map((item, index) => {\r\n                                        let link = \"/profile/\" + item.username\r\n                                        return (\r\n                                            <Link to={link} class=\"list-group-item list-group-item-action\" key={index}>\r\n                                                <div><span className=\" text-muted\">@{item.username}</span> {item.displayname}</div>\r\n                                            </Link>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\" row\">\r\n                <div className=\" col-xxl-6 m-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header bg-white fw-bold text-uppercase text-primary\">bài đăng có gắn thẻ</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {renderPosts_tag}\r\n            <div className=\" row\">\r\n                <div className=\" col-xxl-6 m-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header bg-white fw-bold text-uppercase text-primary\">bài đăng có từ khóa trong nội dung</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {renderPosts_content}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchPage","E:\\Studying\\crypto_social\\client\\src\\store\\store.js",[],"E:\\Studying\\crypto_social\\client\\src\\store\\reducers\\index.js",[],"E:\\Studying\\crypto_social\\client\\src\\store\\reducers\\accountReducer.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":44,"column":8,"nodeType":"69","endLine":44,"endColumn":10,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":24,"column":8,"nodeType":"69","endLine":24,"endColumn":10,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"71","line":26,"column":38,"nodeType":"69","endLine":26,"endColumn":40,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},"Update the dependencies array to be: [fetchPosts]",{"range":"84","text":"85"},"Update the dependencies array to be: [fetchData]",{"range":"86","text":"87"},{"range":"88","text":"87"},[1745,1747],"[fetchPosts]",[736,738],"[fetchData]",[930,932]]